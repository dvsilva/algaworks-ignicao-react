desenvolvimento
- hot reloading (sass/css, react, babel)
- debugging map (tela branca com especificação do erro)
- validação de tipagem
- análise e correção do código (Linting) [padronizar código]
- servidor de desenvolvimento

build
- minificar arquivos 
  - empacotar somente o que for usado
  - compilar scss em css
- gerar o bundle final otimizado
- código estático transpilado

webpack -> responsável por gerar o bundle das apps para rodar nos clientes
babel -> codifica em next-gen js e ele transforma em js compativel (vanilla js)
sass -> preprocessador de css

gerando build
npm run build ou yarn run build

arquivos da pasta build/static/js
arquivo chunk.js -> contem app minificada
arquivo chunk.map.js 
  - usado para debugar pois tem a especificação das linhas da app 
  - pode ser deletado
  - também gerado para a pasta css
  - para não gerar os arquivos map adicionar arquivo .env com conteudo GENERATE_SOURCEMAP=false

rodar aplicação do build localmente
instalar dependencia serve -> npm i -g serve ou yarn global add serve
rodar app -> serve -s build

eject 
- é uma forma de remover o react-scripts e estar utilizando o webpack diretamente
- time do facebook deve dar suporte a varias coisas, mas são seletos na seleção. ex: alias 
- você tem o controle (utilizar uma feature que o react-scripts não suporta)
desvantagens
- webpack tem muito arquivo de configuração
- atualização deve ser feita por voce
- eject é irreversível (praticamente)

sugestão: iniciar projetos com react-scripts e algum momento faz o eject

executar eject -> npm run eject
(deve estar tudo commitado)
